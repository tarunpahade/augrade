import fg from 'fast-glob';

type ReflectActionResult = string | false | undefined;
interface ReflectOptions {
    files: fg.Pattern | fg.Pattern[];
    globOptions?: fg.Options;
    name?: string;
    reflect(code: string): Promise<ReflectActionResult> | ReflectActionResult;
    silent?: boolean;
}
declare const reflect: (options: ReflectOptions) => Promise<string[]>;

declare const fixCjsDts: (options?: Partial<ReflectOptions>) => Promise<string[]>;

declare const fixCjsExports: (options?: Partial<ReflectOptions>) => Promise<string[]>;

export { ReflectActionResult, ReflectOptions, fixCjsDts, fixCjsExports, reflect };
